{"version":3,"sources":["angular-slick.js"],"names":[],"mappings":"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","file":"angular-slick.js","sourcesContent":["(function (angular) {\n  'use strict';\n\n  angular.module('slick', []).directive('slick', [\n    '$timeout',\n    '$compile',\n    '$log',\n    function ($timeout, $compile, $log) {\n      return {\n        restrict: 'AEC',\n        scope: {\n          initOnload: '@',\n          data: '=',\n          currentIndex: '=',\n          accessibility: '@',\n          adaptiveHeight: '@',\n          arrows: '@',\n          asNavFor: '@',\n          appendArrows: '@',\n          appendDots: '@',\n          autoplay: '@',\n          autoplaySpeed: '@',\n          centerMode: '@',\n          centerPadding: '@',\n          cssEase: '@',\n          customPaging: '&',\n          customPagingScope: '=',\n          dots: '@',\n          draggable: '@',\n          easing: '@',\n          fade: '@',\n          focusOnSelect: '@',\n          infinite: '@',\n          initialSlide: '@',\n          lazyLoad: '@',\n          onBeforeChange: '&',\n          onAfterChange: '&',\n          onInit: '&',\n          onReInit: '&',\n          onSetPosition: '&',\n          pauseOnHover: '@',\n          pauseOnDotsHover: '@',\n          responsive: '=',\n          rtl: '@',\n          slide: '@',\n          slidesToShow: '@',\n          slidesToScroll: '@',\n          speed: '@',\n          swipe: '@',\n          swipeToSlide: '@',\n          touchMove: '@',\n          touchThreshold: '@',\n          useCSS: '@',\n          variableWidth: '@',\n          vertical: '@',\n          prevArrow: '@',\n          nextArrow: '@'\n        },\n        link: function (scope, element, attrs) {\n\n          var destroySlick, initializeSlick, isInitialized;\n\n          destroySlick = function () {\n\n            return $timeout(function () {\n\n              var slider;\n\n              slider = angular.element(element);\n\n              slider.slick('unslick');\n\n              slider.find('.slick-list').remove();\n\n              return slider;\n            });\n          };\n          initializeSlick = function () {\n\n            return $timeout(function () {\n\n              var currentIndex, customPaging, slider;\n\n              slider = angular.element(element);\n\n              if (scope.currentIndex) {\n\n                currentIndex = scope.currentIndex;\n              }\n\n              customPaging = function (slick, index) {\n\n                var customPagingScope;\n\n                customPagingScope = scope.customPagingScope || scope;\n\n                return $compile(scope.customPaging({\n\n                  slick: slick,\n                  index: index\n                }))(customPagingScope);\n              };\n\n              slider.on('init', function (evt, sl) {\n\n                if (attrs.onInit) {\n\n                  scope.onInit();\n                }\n\n                if (currentIndex) {\n\n                  return sl.slideHandler(currentIndex);\n                }\n              });\n\n              slider.on('beforeChange', function (event, slick, currentSlide, nextSlide) {\n\n                if (scope.onBeforeChange) {\n\n                  scope.onBeforeChange({\n                    event: event,\n                    slick: slick,\n                    currentSlide: currentSlide,\n                    nextSlide: nextSlide\n                  });\n                }\n\n                if (currentIndex) {\n\n                  currentIndex = currentSlide;\n                  scope.currentIndex = currentSlide;\n\n                  return scope.currentIndex;\n                }\n              });\n\n              slider.on('afterChange', function (event, slick, currentSlide, nextSlide) {\n\n                if (scope.onAfterChange) {\n\n                  scope.onAfterChange({\n                    event: event,\n                    slick: slick,\n                    currentSlide: currentSlide,\n                    nextSlide: nextSlide\n                  });\n                }\n\n                if (currentIndex) {\n\n                  return scope.$apply(function () {\n\n                    currentIndex = currentSlide;\n\n                    scope.currentIndex = currentSlide;\n\n                    return scope.currentIndex;\n                  });\n                }\n              });\n\n              slider.slick({\n                accessibility: scope.accessibility !== 'false',\n                adaptiveHeight: scope.adaptiveHeight === 'true',\n                arrows: scope.arrows !== 'false',\n                asNavFor: scope.asNavFor ? scope.asNavFor : void 0,\n                appendArrows: scope.appendArrows ? angular.element(scope.appendArrows) : angular.element(element),\n                appendDots: scope.appendDots ? angular.element(scope.appendDots) : angular.element(element),\n                autoplay: scope.autoplay === 'true',\n                autoplaySpeed: scope.autoplaySpeed ? parseInt(scope.autoplaySpeed, 10) : 3000,\n                centerMode: scope.centerMode === 'true',\n                centerPadding: scope.centerPadding || '50px',\n                cssEase: scope.cssEase || 'ease',\n                customPaging: attrs.customPaging ? customPaging : void 0,\n                dots: scope.dots === 'true',\n                draggable: scope.draggable !== 'false',\n                easing: scope.easing || 'linear',\n                fade: scope.fade === 'true',\n                focusOnSelect: scope.focusOnSelect === 'true',\n                infinite: scope.infinite !== 'false',\n                initialSlide: scope.initialSlide || 0,\n                lazyLoad: scope.lazyLoad || 'ondemand',\n                beforeChange: attrs.onBeforeChange ? scope.onBeforeChange : void 0,\n                onReInit: attrs.onReInit ? scope.onReInit : void 0,\n                onSetPosition: attrs.onSetPosition ? scope.onSetPosition : void 0,\n                pauseOnHover: scope.pauseOnHover !== 'false',\n                responsive: scope.responsive || void 0,\n                rtl: scope.rtl === 'true',\n                slide: scope.slide || 'div',\n                slidesToShow: scope.slidesToShow ? parseInt(scope.slidesToShow, 10) : 1,\n                slidesToScroll: scope.slidesToScroll ? parseInt(scope.slidesToScroll, 10) : 1,\n                speed: scope.speed ? parseInt(scope.speed, 10) : 300,\n                swipe: scope.swipe !== 'false',\n                swipeToSlide: scope.swipeToSlide === 'true',\n                touchMove: scope.touchMove !== 'false',\n                touchThreshold: scope.touchThreshold ? parseInt(scope.touchThreshold, 10) : 5,\n                useCSS: scope.useCSS !== 'false',\n                variableWidth: scope.variableWidth === 'true',\n                vertical: scope.vertical === 'true',\n                prevArrow: scope.prevArrow ? angular.element(scope.prevArrow) : void 0,\n                nextArrow: scope.nextArrow ? angular.element(scope.nextArrow) : void 0\n              });\n\n              return scope.$watch('currentIndex', function (newVal, oldVal) {\n\n                if (currentIndex && newVal && newVal !== currentIndex) {\n\n                  return slider.slick('slickGoTo', newVal);\n                }\n              });\n            });\n          };\n\n          if (scope.initOnload) {\n\n            isInitialized = false;\n\n            return scope.$watch('data', function (newVal, oldVal) {\n\n              if (newVal) {\n\n                if (isInitialized) {\n\n                  destroySlick();\n                }\n\n                initializeSlick();\n\n                isInitialized = true;\n\n                return isInitialized;\n              }\n            });\n          }\n          else {\n\n            return initializeSlick();\n          }\n        }\n      };\n    }\n  ]);\n\n})(angular);\n"],"sourceRoot":"src/"}